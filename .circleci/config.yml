# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Choose either one of the orbs below
  # Declare a dependency on the welcome-orb
  # welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@2.0.3
# Orchestrate or schedule a set of jobs

commands:
  # Exercise: Reusable Job Code
  print_pipeline_id:
    parameters:
      id: 
        type: string
    steps:
      - run: echo << parameters.id >>

  # Exercise - Rollback
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
          # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}
          
jobs:

  create_infrastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-east-1
            aws ec2 describe-instances --query 'Reservations[*].Instances[*].[PublicIpAddress]' \
              --output text >> inventory.txt 
      - run:
          name: Install tar utility
          command: |
            yum install -y tar gzip
      - persist_to_workspace:
            root: ~/
            paths: 
              - inventory.txt  

      # Fail the job intentionally to simulate an error.
      # Uncomment the line below if you want to fail the current step
      # - run: return 1
      - destroy_environment
  
    # Exercise: Config and Deployment
  configure_infrastructure: 
    docker:
      - image: python:3.7-alpine3.11 
    steps:
      - checkout
      - add_ssh_keys:
              # You can get this ID in the section where you registered the SSH Key
              fingerprints: ["87:e8:25:2e:80:5a:59:1e:76:3f:1c:5d:bf:4b:25:e2"] 
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook -i inventory.txt main.yml

workflows:
  # Name the workflow "welcome"
  my_workflow:
    # Run the welcome/run job in its own container
    jobs:
      # - welcome/run
      - create_infrastructure
      - configure_infrastructure:
         requires: 
          - create_infrastructure
    
